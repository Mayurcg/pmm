---
# This playbook contains tasks executed during PMM Server update.
- hosts: localhost
  become: true
  remote_user: root
  gather_facts: true

  environment:
    PATH: /usr/local/bin:{{ ansible_env.PATH }}

  vars:
    pmm_packages:
      - percona-victoriametrics
      - percona-qan-api2
      - percona-alertmanager
      - pmm-managed
      - pmm-update
      - dbaas-controller
      - dbaas-tools
      - pmm2-client
      - pmm-dump
      - vmproxy
  pre_tasks:
    - name: detect /srv/pmm-distribution
      stat:
        path: /srv/pmm-distribution
      # no_log: true
      register: srv_pmm_distribution

    - name: Distribution              | Detect docker
      set_fact:
        # is_docker: '{{ ansible_virtualization_type == "docker" }}'
        is_docker: '{{ lookup("file", "/srv/pmm-distribution", errors="ignore") == "docker" }}'
      # no_log: true
      when: srv_pmm_distribution.stat.exists

    # NOTE: This fact is surprisingly getting set to true when it is being built for AMI/OVF,
    # since the `/srv/distibution` file DOES NOT exist before post-build-action.yml is called.
    - name: force container
      set_fact:
        is_docker: True
      when: is_docker is undefined

    - name: Info                      | Print debug information
      debug:
        msg:
          - 'Contents of /etc/cloud/cloud.cfg: {{ lookup("file", "/etc/cloud/cloud.cfg", errors="ignore") | to_nice_yaml(indent=4) }}'
          - 'Contents of /etc/passwd: {{ lookup("file", "/etc/passwd") }}'
          - 'Contents of /etc/group: {{ lookup("file", "/etc/group") }}'
          - 'Environment PATH: {{ lookup("env", "PATH") }}'
          - "Current user: {{ ansible_user_id }}"
          - "Current user home: {{ ansible_user_dir }}"

  tasks:
    # we need install this package here because it contain VERSION file
    - name: Remove percona-dashboard without architecture
      yum:
        name: percona-dashboards.*noarch
        state: absent

    - name: Update percona-dashboards package
      yum:
        name:
          - percona-dashboards
          - percona-grafana
        state: latest

    - name: Create supervisord dir
      file:
        path: /etc/supervisord.d/
        state: directory

    - name: Copy supervisord config
      copy:
        src: pmm.ini
        dest: /etc/supervisord.d/pmm.ini

    - name: Remove supervisord block from pmm.ini
      ini_file:
        path: /etc/supervisord.d/pmm.ini
        section: supervisord
        state: absent
      when: not is_docker

    - name: Create grafana config
      include_role:
        name: grafana

    # NOTE: this playbook requires that supevisord be running
    - name: Install postgres
      include_role:
        name: postgres

    # Important: set 'forking' to 'simple'
    - name: Configure systemd
      when: not is_docker
      copy:
        src: supervisord.service
        dest: /usr/lib/systemd/system/supervisord.service
        mode: 0644

    - name: Remove old supervisord service configuration
      when: not is_docker
      file:
        path: /etc/systemd/system/supervisord.service
        state: absent

    # Start the services
    - name: Enable supervisord        | Make the service persist between reboots
      when: not is_docker
      systemd:
        name: supervisord
        enabled: yes

    - name: Supervisord start         | Start supervisord service for AMI/OVF
      when: not is_docker
      systemd:
        name: supervisord
        state: started # supervisord may already be running
        daemon_reload: yes

    - name: Check that supervisor socket exists
      stat:
        path: /var/run/supervisor/supervisor.sock
      register: supervisor_socket

    - name: Supervisord start         | Start supervisord for docker
      when: is_docker and not supervisor_socket.stat.exists
      shell: /usr/local/bin/supervisord -c /etc/supervisord.conf &

    - name: Run initialization playbook
      include_role:
        name: initialization

    - name: Enable crond service
      when: not is_docker
      service:
        name: crond
        state: started
        enabled: yes

    - name: Increase number of open files for jobs
      when: not is_docker
      ini_file:
        dest: /etc/supervisord.conf
        section: supervisord
        option: minfds
        value: "800000"

    # See https://github.com/Supervisor/supervisor/issues/1264 for explanation
    # why we do reread + stop/remove/add instead of using supervisorctl Ansible module.

    - name: Reread supervisord configuration
      command: /usr/local/bin/supervisorctl reread
      become: true
      register: reread_result
      changed_when: "'No config updates to processes' not in reread_result.stdout"

    - name: Check reread results
      debug: var=reread_result.stdout_lines

    # see https://jira.percona.com/browse/PMM-8492 for details about the issue
    - name: Delete experimental repo file in 2.16 version
      file:
        path: "/etc/yum.repos.d/percona-original-experimental.repo"
        state: absent
      register: experimental_repo_existed

    - name: Cleanup yum metadata
      command: yum clean metadata
      register: yum_clean_result
      changed_when: "'Cleaning repos' in yum_clean_result.stdout"
      when: experimental_repo_existed.changed
      tags:
        - skip_ansible_lint # '503 Tasks that run when changed should likely be handlers'.
          # The handler looks bad in this case

    # Split download and update to produce a bit more of progress output.
    - name: Download pmm2 packages
      yum:
        name: "{{ pmm_packages }}"
        state: latest
        download_only: yes

    - name: Update pmm2 packages
      yum:
        name: "{{ pmm_packages }}"
        state: latest

    # restart pmm-managed first as it may update supervisord configuration on start
    - name: Restart pmm-managed
      command: /usr/local/bin/supervisorctl {{ item }} pmm-managed
      become: true
      changed_when: true
      with_items: ["stop", "remove", "add"]

    # give pmm-managed time to update supervisord configuration,
    # and give update UI time to catch up after pmm-managed restart
    - name: Wait for pmm-managed
      pause: seconds=5

    - name: Tail supervisord logs
      command: /usr/local/bin/supervisorctl maintail -100000
      become: true
      register: supervisord_status
      changed_when: false

    - name: Check the logs of supervisord
      debug: var=supervisord_status.stdout_lines

    - name: Tail pmm-managed logs
      command: tail -n 10000 /srv/logs/pmm-managed.log
      register: pmm_managed_logtail

    - name: Check the logs of pmm-managed
      debug: var=pmm_managed_logtail.stdout_lines

    - name: Update system packages
      yum:
        name: "*"
        state: latest
        security: yes
        exclude:
          - nginx*

    - name: Updating only select packages
      yum:
        name: "{{ item }}"
        state: latest
      loop:
        - nss
        - tzdata
        - libssh2
        - sshpass

    - name: Install nginx
      include_role:
        name: nginx

    - name: Install clickhouse
      include_role:
        name: clickhouse

    # Fix things that should be fixed before restarts.

    - name: Stop systemd pmm-agent service, if running
      systemd:
        name: pmm-agent
        state: stopped
        enabled: no
      when: not is_docker

    - name: Remove old or redundant packages
      yum:
        state: absent
        name:
          - percona-qan-app # https://jira.percona.com/browse/PMM-6766
          - mariadb-libs # https://jira.percona.com/browse/PMM-5215
          - logrotate # https://jira.percona.com/browse/PMM-7627
          - pmm-server # https://jira.percona.com/browse/PMM-11239
          - screen
          - yum-cron

    # https://jira.percona.com/browse/PMM-9298
    - name: Copy rezise-xfs file for lvm
      copy:
        src: resize-xfs-lvm
        dest: /var/lib/cloud/scripts/per-boot/resize-xfs
        mode: 0755
      when: not is_docker

    - name: Create change-admin-password command
      copy:
        src: change-admin-password
        dest: /usr/local/sbin/change-admin-password
        mode: 0755

    # https://jira.percona.com/browse/PMM-5271
    - name: Patch volume size script
      when: not is_docker
      replace:
        dest: /var/lib/cloud/scripts/per-boot/resize-xfs
        regexp: "set -o errexit"
        replace: ""

    # TODO: Create /srv/alertmanager/data and /srv/victoriametrics/data in pmm-managed
    # to support Docker-way (swap image) updates.
    # https://jira.percona.com/browse/PMM-7024

    - name: Create working directory for Alertmanager
      file: path=/srv/alertmanager/data state=directory owner=pmm group=pmm

    - name: Create working directory for VictoriaMetrics
      file: path=/srv/victoriametrics/data state=directory owner=pmm group=pmm

    - name: Create empty configuration file for VictoriaMetrics
      file: path=/etc/victoriametrics-promscrape.yml state=touch owner=pmm group=pmm

    - name: Reread supervisord configuration again
      command: /usr/local/bin/supervisorctl reread
      become: true
      register: reread_result
      changed_when: "'No config updates to processes' not in reread_result.stdout"

    - name: Check reread results
      debug:
        msg:
          - reread_result.stdout_lines
          - '{{ lookup("file", "/srv/logs/pmm-managed.log", errors="ignore") }}'

    - name: Restart services
      command: /usr/local/bin/supervisorctl {{ item.1 }} {{ item.0 }}
      become: true
      changed_when: true
      with_nested:
        - - alertmanager
          - nginx
          - grafana
          - qan-api2
          - pmm-agent
        - ["stop", "remove", "add"]

    - name: Delete old grafana and yum-cron artifacts
      file:
        state: absent
        path: "{{ item }}"
      loop:
        - /var/lib/grafana/plugins/
        - /usr/share/grafana/data/grafana.db
        - /etc/yum/yum-cron-hourly.conf
        - /etc/yum/yum-cron.conf

    - name: Enable pmm-update-perform-init after build
      ini_file:
        path: /etc/supervisord.d/pmm.ini
        section: program:pmm-update-perform-init
        option: autostart
        value: "true"

    - name: Reread pmm-update-perform-init supervisor config
      command: /usr/local/bin/supervisorctl reread
      become: true
      register: reread_init__result
      changed_when: "'No config updates to processes' not in reread_init__result.stdout"

    - name: Update/restart other services
      command: /usr/local/bin/supervisorctl update
      become: true
      register: update_result
      changed_when: "'updated' in update_result.stdout"

    - name: Print other services's logs
      debug: var=update_result.stdout_lines

    # SIGUSR2 is sent to supervisord by pmm-managed right before the update for logging to work correctly.
    # We use that fact to show what was restarted during the update.
    - name: Get supervisord logs
      shell: /usr/local/bin/supervisorctl maintail -100000 | tac | awk '!flag; /received SIGUSR2/{flag = 1};' | tac
      become: true
      register: maintail_result
      changed_when: False

    - name: Print supervisord logs
      debug: var=maintail_result.stdout_lines

    - name: Cleanup yum cache
      file:
        state: absent
        path: /var/cache/yum

    - name: Print qan-api2 logs
      debug:
        msg: "{{ lookup('file', '/srv/logs/qan-api2.log', errors='ignore') }}"

    - name: Print clickhouse-server logs
      debug:
        msg: "{{ lookup('file', '/srv/logs/clickhouse-server.log', errors='ignore') }}"
