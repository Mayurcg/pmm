// Code generated by go-swagger; DO NOT EDIT.

package object_details

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// FingerprintsByQueryIDReader is a Reader for the FingerprintsByQueryID structure.
type FingerprintsByQueryIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FingerprintsByQueryIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewFingerprintsByQueryIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewFingerprintsByQueryIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewFingerprintsByQueryIDOK creates a FingerprintsByQueryIDOK with default headers values
func NewFingerprintsByQueryIDOK() *FingerprintsByQueryIDOK {
	return &FingerprintsByQueryIDOK{}
}

/*
FingerprintsByQueryIDOK describes a response with status code 200, with default header values.

A successful response.
*/
type FingerprintsByQueryIDOK struct {
	Payload *FingerprintsByQueryIDOKBody
}

func (o *FingerprintsByQueryIDOK) Error() string {
	return fmt.Sprintf("[POST /v0/qan/ObjectDetails/FingerprintsByQueryID][%d] fingerprintsByQueryIdOk  %+v", 200, o.Payload)
}

func (o *FingerprintsByQueryIDOK) GetPayload() *FingerprintsByQueryIDOKBody {
	return o.Payload
}

func (o *FingerprintsByQueryIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {
	o.Payload = new(FingerprintsByQueryIDOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFingerprintsByQueryIDDefault creates a FingerprintsByQueryIDDefault with default headers values
func NewFingerprintsByQueryIDDefault(code int) *FingerprintsByQueryIDDefault {
	return &FingerprintsByQueryIDDefault{
		_statusCode: code,
	}
}

/*
FingerprintsByQueryIDDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type FingerprintsByQueryIDDefault struct {
	_statusCode int

	Payload *FingerprintsByQueryIDDefaultBody
}

// Code gets the status code for the fingerprints by query ID default response
func (o *FingerprintsByQueryIDDefault) Code() int {
	return o._statusCode
}

func (o *FingerprintsByQueryIDDefault) Error() string {
	return fmt.Sprintf("[POST /v0/qan/ObjectDetails/FingerprintsByQueryID][%d] FingerprintsByQueryID default  %+v", o._statusCode, o.Payload)
}

func (o *FingerprintsByQueryIDDefault) GetPayload() *FingerprintsByQueryIDDefaultBody {
	return o.Payload
}

func (o *FingerprintsByQueryIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {
	o.Payload = new(FingerprintsByQueryIDDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
FingerprintsByQueryIDBody FingerprintsByQueryIDRequest get feingerprint, explain fingerprint for given query ID.
swagger:model FingerprintsByQueryIDBody
*/
type FingerprintsByQueryIDBody struct {
	// serviceid
	Serviceid string `json:"serviceid,omitempty"`

	// query id
	QueryID string `json:"query_id,omitempty"`
}

// Validate validates this fingerprints by query ID body
func (o *FingerprintsByQueryIDBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this fingerprints by query ID body based on context it is used
func (o *FingerprintsByQueryIDBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *FingerprintsByQueryIDBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *FingerprintsByQueryIDBody) UnmarshalBinary(b []byte) error {
	var res FingerprintsByQueryIDBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
FingerprintsByQueryIDDefaultBody fingerprints by query ID default body
swagger:model FingerprintsByQueryIDDefaultBody
*/
type FingerprintsByQueryIDDefaultBody struct {
	// code
	Code int32 `json:"code,omitempty"`

	// message
	Message string `json:"message,omitempty"`

	// details
	Details []*FingerprintsByQueryIDDefaultBodyDetailsItems0 `json:"details"`
}

// Validate validates this fingerprints by query ID default body
func (o *FingerprintsByQueryIDDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *FingerprintsByQueryIDDefaultBody) validateDetails(formats strfmt.Registry) error {
	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("FingerprintsByQueryID default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("FingerprintsByQueryID default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this fingerprints by query ID default body based on the context it is used
func (o *FingerprintsByQueryIDDefaultBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateDetails(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *FingerprintsByQueryIDDefaultBody) contextValidateDetails(ctx context.Context, formats strfmt.Registry) error {
	for i := 0; i < len(o.Details); i++ {
		if o.Details[i] != nil {
			if err := o.Details[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("FingerprintsByQueryID default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("FingerprintsByQueryID default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *FingerprintsByQueryIDDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *FingerprintsByQueryIDDefaultBody) UnmarshalBinary(b []byte) error {
	var res FingerprintsByQueryIDDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
FingerprintsByQueryIDDefaultBodyDetailsItems0 fingerprints by query ID default body details items0
swagger:model FingerprintsByQueryIDDefaultBodyDetailsItems0
*/
type FingerprintsByQueryIDDefaultBodyDetailsItems0 struct {
	// at type
	AtType string `json:"@type,omitempty"`
}

// Validate validates this fingerprints by query ID default body details items0
func (o *FingerprintsByQueryIDDefaultBodyDetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this fingerprints by query ID default body details items0 based on context it is used
func (o *FingerprintsByQueryIDDefaultBodyDetailsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *FingerprintsByQueryIDDefaultBodyDetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *FingerprintsByQueryIDDefaultBodyDetailsItems0) UnmarshalBinary(b []byte) error {
	var res FingerprintsByQueryIDDefaultBodyDetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
FingerprintsByQueryIDOKBody FingerprintsByQueryIDReply is fingerprint, explain fingerprint and placeholders count for given query ID.
swagger:model FingerprintsByQueryIDOKBody
*/
type FingerprintsByQueryIDOKBody struct {
	// explain fingerprint
	ExplainFingerprint string `json:"explain_fingerprint,omitempty"`

	// placeholders count
	PlaceholdersCount int64 `json:"placeholders_count,omitempty"`

	// fingerprint
	Fingerprint string `json:"fingerprint,omitempty"`
}

// Validate validates this fingerprints by query ID OK body
func (o *FingerprintsByQueryIDOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this fingerprints by query ID OK body based on context it is used
func (o *FingerprintsByQueryIDOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *FingerprintsByQueryIDOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *FingerprintsByQueryIDOKBody) UnmarshalBinary(b []byte) error {
	var res FingerprintsByQueryIDOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
