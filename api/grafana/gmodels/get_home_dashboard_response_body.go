// Code generated by go-swagger; DO NOT EDIT.

package gmodels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetHomeDashboardResponseBody Get home dashboard response.
//
// swagger:model GetHomeDashboardResponseBody
type GetHomeDashboardResponseBody struct {
	// dashboard
	Dashboard JSON `json:"dashboard,omitempty"`

	// meta
	Meta *DashboardMeta `json:"meta,omitempty"`

	// redirect Uri
	RedirectURI string `json:"redirectUri,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *GetHomeDashboardResponseBody) UnmarshalJSON(raw []byte) error {
	// AO0
	var dataAO0 struct {
		Dashboard JSON `json:"dashboard,omitempty"`

		Meta *DashboardMeta `json:"meta,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataAO0); err != nil {
		return err
	}

	m.Dashboard = dataAO0.Dashboard

	m.Meta = dataAO0.Meta

	// AO1
	var dataAO1 struct {
		RedirectURI string `json:"redirectUri,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataAO1); err != nil {
		return err
	}

	m.RedirectURI = dataAO1.RedirectURI

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m GetHomeDashboardResponseBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	var dataAO0 struct {
		Dashboard JSON `json:"dashboard,omitempty"`

		Meta *DashboardMeta `json:"meta,omitempty"`
	}

	dataAO0.Dashboard = m.Dashboard

	dataAO0.Meta = m.Meta

	jsonDataAO0, errAO0 := swag.WriteJSON(dataAO0)
	if errAO0 != nil {
		return nil, errAO0
	}
	_parts = append(_parts, jsonDataAO0)
	var dataAO1 struct {
		RedirectURI string `json:"redirectUri,omitempty"`
	}

	dataAO1.RedirectURI = m.RedirectURI

	jsonDataAO1, errAO1 := swag.WriteJSON(dataAO1)
	if errAO1 != nil {
		return nil, errAO1
	}
	_parts = append(_parts, jsonDataAO1)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this get home dashboard response body
func (m *GetHomeDashboardResponseBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMeta(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetHomeDashboardResponseBody) validateMeta(formats strfmt.Registry) error {
	if swag.IsZero(m.Meta) { // not required
		return nil
	}

	if m.Meta != nil {
		if err := m.Meta.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("meta")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("meta")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this get home dashboard response body based on the context it is used
func (m *GetHomeDashboardResponseBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateMeta(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetHomeDashboardResponseBody) contextValidateMeta(ctx context.Context, formats strfmt.Registry) error {
	if m.Meta != nil {
		if err := m.Meta.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("meta")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("meta")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GetHomeDashboardResponseBody) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetHomeDashboardResponseBody) UnmarshalBinary(b []byte) error {
	var res GetHomeDashboardResponseBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
