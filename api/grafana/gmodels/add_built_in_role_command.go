// Code generated by go-swagger; DO NOT EDIT.

package gmodels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AddBuiltInRoleCommand add built in role command
//
// swagger:model AddBuiltInRoleCommand
type AddBuiltInRoleCommand struct {
	// builtin role
	// Enum: [Viewer  Editor  Admin  Grafana Admin]
	BuiltinRole string `json:"builtInRole,omitempty"`

	// A flag indicating if the assignment is global or not. If set to false, the default org ID of the authenticated user will be used from the request to create organization local assignment. Refer to the Built-in role assignments for more information.
	Global bool `json:"global,omitempty"`

	// role UID
	RoleUID string `json:"roleUid,omitempty"`
}

// Validate validates this add built in role command
func (m *AddBuiltInRoleCommand) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBuiltinRole(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var addBuiltInRoleCommandTypeBuiltinRolePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Viewer"," Editor"," Admin"," Grafana Admin"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		addBuiltInRoleCommandTypeBuiltinRolePropEnum = append(addBuiltInRoleCommandTypeBuiltinRolePropEnum, v)
	}
}

const (

	// AddBuiltInRoleCommandBuiltinRoleViewer captures enum value "Viewer"
	AddBuiltInRoleCommandBuiltinRoleViewer string = "Viewer"

	// AddBuiltInRoleCommandBuiltinRoleEditor captures enum value " Editor"
	AddBuiltInRoleCommandBuiltinRoleEditor string = " Editor"

	// AddBuiltInRoleCommandBuiltinRoleAdmin captures enum value " Admin"
	AddBuiltInRoleCommandBuiltinRoleAdmin string = " Admin"

	// AddBuiltInRoleCommandBuiltinRoleGrafanaAdmin captures enum value " Grafana Admin"
	AddBuiltInRoleCommandBuiltinRoleGrafanaAdmin string = " Grafana Admin"
)

// prop value enum
func (m *AddBuiltInRoleCommand) validateBuiltinRoleEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, addBuiltInRoleCommandTypeBuiltinRolePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *AddBuiltInRoleCommand) validateBuiltinRole(formats strfmt.Registry) error {
	if swag.IsZero(m.BuiltinRole) { // not required
		return nil
	}

	// value enum
	if err := m.validateBuiltinRoleEnum("builtInRole", "body", m.BuiltinRole); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this add built in role command based on context it is used
func (m *AddBuiltInRoleCommand) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AddBuiltInRoleCommand) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AddBuiltInRoleCommand) UnmarshalBinary(b []byte) error {
	var res AddBuiltInRoleCommand
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
