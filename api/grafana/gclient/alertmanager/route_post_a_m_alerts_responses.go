// Code generated by go-swagger; DO NOT EDIT.

package alertmanager

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/percona/pmm/api/grafana/gmodels"
)

// RoutePostAMAlertsReader is a Reader for the RoutePostAMAlerts structure.
type RoutePostAMAlertsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RoutePostAMAlertsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRoutePostAMAlertsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRoutePostAMAlertsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewRoutePostAMAlertsOK creates a RoutePostAMAlertsOK with default headers values
func NewRoutePostAMAlertsOK() *RoutePostAMAlertsOK {
	return &RoutePostAMAlertsOK{}
}

/* RoutePostAMAlertsOK describes a response with status code 200, with default header values.

Ack
*/
type RoutePostAMAlertsOK struct {
	Payload gmodels.Ack
}

func (o *RoutePostAMAlertsOK) Error() string {
	return fmt.Sprintf("[POST /api/alertmanager/{Recipient}/api/v2/alerts][%d] routePostAMAlertsOK  %+v", 200, o.Payload)
}

func (o *RoutePostAMAlertsOK) GetPayload() gmodels.Ack {
	return o.Payload
}

func (o *RoutePostAMAlertsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {
	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRoutePostAMAlertsBadRequest creates a RoutePostAMAlertsBadRequest with default headers values
func NewRoutePostAMAlertsBadRequest() *RoutePostAMAlertsBadRequest {
	return &RoutePostAMAlertsBadRequest{}
}

/* RoutePostAMAlertsBadRequest describes a response with status code 400, with default header values.

ValidationError
*/
type RoutePostAMAlertsBadRequest struct {
	Payload *gmodels.ValidationError
}

func (o *RoutePostAMAlertsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/alertmanager/{Recipient}/api/v2/alerts][%d] routePostAMAlertsBadRequest  %+v", 400, o.Payload)
}

func (o *RoutePostAMAlertsBadRequest) GetPayload() *gmodels.ValidationError {
	return o.Payload
}

func (o *RoutePostAMAlertsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {
	o.Payload = new(gmodels.ValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
