#!/bin/sh

PATH=/bin:/sbin
SOURCE=
# Name of the container to check
CONTAINER_NAME="pmm-server"

# Function to check if the container is running
is_container_running() {
    podman inspect -f '{{.State.Running}}' "$CONTAINER_NAME" 2>/dev/null
}

# Function to check container health status
container_health_status() {
    podman inspect -f '{{.State.Health.Status}}' "$CONTAINER_NAME" 2>/dev/null
}

if [ -f /home/admin/firstboot ]; then
  echo "exiting, already was executed"
  exit
fi

if [ -f /var/lib/cloud/data/status.json ]; then
    SOURCE=$(
         cat /var/lib/cloud/data/status.json 2>/dev/null | jq -r '.v1.datasource'  2>/dev/null
    )
fi

if [ "x$SOURCE" = "xDataSourceEc2Local" ]; then
    # Loop until the container is running
    echo "Waiting for container '$CONTAINER_NAME' to start..."
    while [ "$(is_container_running)" != "true" ]; do
        sleep 1
    done

    echo "Container '$CONTAINER_NAME' is now running."

    # Loop until the container is healthy
    echo "Waiting for container '$CONTAINER_NAME' to become healthy..."
    while [ "$(container_health_status)" != "healthy" ]; do
        sleep 1
    done

    echo "Container '$CONTAINER_NAME' is now healthy."

    INSTANCE_ID=$(curl --connect-timeout 5 -s http://169.254.169.254/latest/meta-data/instance-id)
    podman exec pmm-server change-admin-password $INSTANCE_ID
fi

# Create the marker file
touch /home/admin/firstboot

